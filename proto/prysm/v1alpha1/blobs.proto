// Copyright 2022 Prysmatic Labs.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package ethereum.eth.v1alpha1;

import "proto/eth/ext/options.proto";
import "proto/engine/v1/execution_engine.proto";

option csharp_namespace = "Ethereum.Eth.v1alpha1";
option go_package = "github.com/prysmaticlabs/prysm/v3/proto/prysm/v1alpha1;eth";
option java_multiple_files = true;
option java_outer_classname = "BlobsProto";
option java_package = "org.ethereum.eth.v1alpha1";
option php_namespace = "Ethereum\\Eth\\v1alpha1";

// The blobs sidecar which contains the beacon block root, slot, blobs and an aggregated proof
// for fast validation.
message BlobsSidecar {
        // The beacon block root which corresponds to the beacon block.
        bytes beacon_block_root = 1 [(ethereum.eth.ext.ssz_size) = "32"];
        // The beacon block slot which corresponds ot the beacon block.
        uint64 beacon_block_slot = 2 [(ethereum.eth.ext.cast_type) = "github.com/prysmaticlabs/prysm/v3/consensus-types/primitives.Slot"];
        // The blobs itself which contains data to be committed.
        repeated ethereum.engine.v1.Blob blobs = 3 [(ethereum.eth.ext.ssz_max)  = "16"];
        // The aggregated proof for blobs and commitments for validation.
        bytes aggregated_proof = 4 [(ethereum.eth.ext.ssz_size) = "48"];
}
