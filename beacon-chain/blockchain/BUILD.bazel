load("@prysm//tools/go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "chain_info.go",
        "head.go",
        "head_sync_committee_info.go",
        "info.go",
        "init_sync_process_block.go",
        "log.go",
        "metrics.go",
        "process_attestation.go",
        "process_attestation_helpers.go",
        "process_block.go",
        "process_block_helpers.go",
        "receive_attestation.go",
        "receive_block.go",
        "service.go",
        "weak_subjectivity_checks.go",
    ],
    importpath = "github.com/prysmaticlabs/prysm/beacon-chain/blockchain",
    visibility = [
        "//beacon-chain:__subpackages__",
        "//fuzz:__pkg__",
    ],
    deps = [
        "//beacon-chain/cache:go_default_library",
        "//beacon-chain/cache/depositcache:go_default_library",
        "//beacon-chain/core/altair:go_default_library",
        "//beacon-chain/core/epoch/precompute:go_default_library",
        "//beacon-chain/core/feed:go_default_library",
        "//beacon-chain/core/feed/state:go_default_library",
        "//beacon-chain/core/helpers:go_default_library",
        "//beacon-chain/core/state:go_default_library",
        "//beacon-chain/db:go_default_library",
        "//beacon-chain/db/filters:go_default_library",
        "//beacon-chain/forkchoice:go_default_library",
        "//beacon-chain/forkchoice/protoarray:go_default_library",
        "//beacon-chain/operations/attestations:go_default_library",
        "//beacon-chain/operations/slashings:go_default_library",
        "//beacon-chain/operations/voluntaryexits:go_default_library",
        "//beacon-chain/p2p:go_default_library",
        "//beacon-chain/powchain:go_default_library",
        "//beacon-chain/state/interface:go_default_library",
        "//beacon-chain/state/stategen:go_default_library",
        "//beacon-chain/state/v2:go_default_library",
        "//cmd/beacon-chain/flags:go_default_library",
        "//proto/beacon/p2p/v1:go_default_library",
        "//proto/eth/v1:go_default_library",
        "//proto/eth/v1alpha1:go_default_library",
        "//proto/interfaces:go_default_library",
        "//shared/attestationutil:go_default_library",
        "//shared/bls:go_default_library",
        "//shared/bytesutil:go_default_library",
        "//shared/copyutil:go_default_library",
        "//shared/featureconfig:go_default_library",
        "//shared/mputil:go_default_library",
        "//shared/params:go_default_library",
        "//shared/slotutil:go_default_library",
        "//shared/timeutils:go_default_library",
        "//shared/traceutil:go_default_library",
        "//shared/version:go_default_library",
        "@com_github_emicklei_dot//:go_default_library",
        "@com_github_hashicorp_golang_lru//:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@com_github_prometheus_client_golang//prometheus:go_default_library",
        "@com_github_prometheus_client_golang//prometheus/promauto:go_default_library",
        "@com_github_prysmaticlabs_eth2_types//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@io_opencensus_go//trace:go_default_library",
    ],
)

test_suite(
    name = "go_default_test",
    tests = [
        ":go_raceoff_test",
        ":go_raceon_test",
    ],
)

go_test(
    name = "go_raceoff_test",
    size = "medium",
    srcs = [
        "blockchain_test.go",
        "chain_info_test.go",
        "checktags_test.go",
        "head_test.go",
        "info_test.go",
        "init_test.go",
        "metrics_test.go",
        "process_attestation_test.go",
        "process_block_test.go",
        "receive_attestation_test.go",
        "receive_block_test.go",
        "service_test.go",
        "weak_subjectivity_checks_test.go",
    ],
    embed = [":go_default_library"],
    gotags = ["develop"],
    deps = [
        "//beacon-chain/blockchain/testing:go_default_library",
        "//beacon-chain/cache/depositcache:go_default_library",
        "//beacon-chain/core/blocks:go_default_library",
        "//beacon-chain/core/helpers:go_default_library",
        "//beacon-chain/core/state:go_default_library",
        "//beacon-chain/db:go_default_library",
        "//beacon-chain/db/testing:go_default_library",
        "//beacon-chain/p2p:go_default_library",
        "//beacon-chain/powchain:go_default_library",
        "//beacon-chain/state/stateutil:go_default_library",
        "//beacon-chain/state/v1:go_default_library",
        "//proto/beacon/db:go_default_library",
        "//proto/beacon/p2p/v1:go_default_library",
        "//proto/eth/v1alpha1:go_default_library",
        "//proto/eth/v1alpha1/wrapper:go_default_library",
        "//proto/prysm/v2:go_default_library",
        "//shared/bytesutil:go_default_library",
        "//shared/event:go_default_library",
        "//shared/params:go_default_library",
        "//shared/testutil:go_default_library",
        "//shared/testutil/assert:go_default_library",
        "//shared/testutil/require:go_default_library",
        "@com_github_ethereum_go_ethereum//:go_default_library",
        "@com_github_ethereum_go_ethereum//common:go_default_library",
        "@com_github_ethereum_go_ethereum//core/types:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_sirupsen_logrus//hooks/test:go_default_library",
        "@in_gopkg_d4l3k_messagediff_v1//:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
        "@org_golang_x_net//context:go_default_library",
    ],
)

go_test(
    name = "go_raceon_test",
    srcs = [
        "chain_info_norace_test.go",
        "checktags_test.go",
        "init_test.go",
        "receive_block_test.go",
        "service_norace_test.go",
    ],
    embed = [":go_default_library"],
    gc_goopts = [
        # Go 1.14 enables checkptr by default when building with -race or -msan. There is a pointer
        # issue in boltdb, so must disable checkptr at compile time. This flag can be removed once
        # the project is migrated to etcd's version of boltdb and the issue has been fixed.
        # See: https://github.com/etcd-io/bbolt/issues/187.
        "-d=checkptr=0",
    ],
    gotags = ["develop"],
    race = "on",
    tags = ["race_on"],
    deps = [
        "//beacon-chain/blockchain/testing:go_default_library",
        "//beacon-chain/cache/depositcache:go_default_library",
        "//beacon-chain/core/blocks:go_default_library",
        "//beacon-chain/core/helpers:go_default_library",
        "//beacon-chain/core/state:go_default_library",
        "//beacon-chain/db:go_default_library",
        "//beacon-chain/db/testing:go_default_library",
        "//beacon-chain/p2p:go_default_library",
        "//beacon-chain/powchain:go_default_library",
        "//proto/beacon/p2p/v1:go_default_library",
        "//proto/eth/v1alpha1:go_default_library",
        "//proto/eth/v1alpha1/wrapper:go_default_library",
        "//shared/bytesutil:go_default_library",
        "//shared/event:go_default_library",
        "//shared/params:go_default_library",
        "//shared/testutil:go_default_library",
        "//shared/testutil/assert:go_default_library",
        "//shared/testutil/require:go_default_library",
        "@com_github_ethereum_go_ethereum//:go_default_library",
        "@com_github_ethereum_go_ethereum//common:go_default_library",
        "@com_github_ethereum_go_ethereum//core/types:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_sirupsen_logrus//hooks/test:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
        "@org_golang_x_net//context:go_default_library",
    ],
)
