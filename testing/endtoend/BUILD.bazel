load("@prysm//tools/go:def.bzl", "go_test")

# gazelle:exclude geth_deps.go
# gazelle:exclude mainnet_e2e_test.go
go_test(
    name = "go_default_test",
    size = "large",
    testonly = True,
    srcs = [
        "endtoend_test.go",
        "minimal_e2e_test.go",
        "minimal_slashing_e2e_test.go",
        "slasher_simulator_e2e_test.go",
    ],
    args = ["-test.v"],
    data = [
        "//:prysm_sh",
        "//cmd/beacon-chain",
        "//cmd/validator",
        "//tools/bootnode",
        "@com_github_ethereum_go_ethereum//cmd/geth",
        "@web3signer",
    ],
    eth_network = "minimal",
    shard_count = 2,
    tags = [
        "e2e",
        "manual",
        "minimal",
        "requires-network",
    ],
    deps = [
        "//beacon-chain/blockchain/testing:go_default_library",
        "//beacon-chain/core/transition:go_default_library",
        "//beacon-chain/db/testing:go_default_library",
        "//beacon-chain/operations/slashings/mock:go_default_library",
        "//beacon-chain/state/stategen/mock:go_default_library",
        "//config/params:go_default_library",
        "//crypto/bls:go_default_library",
        "//proto/prysm/v1alpha1:go_default_library",
        "//testing/assert:go_default_library",
        "//testing/endtoend/components:go_default_library",
        "//testing/endtoend/components/eth1:go_default_library",
        "//testing/endtoend/evaluators:go_default_library",
        "//testing/endtoend/helpers:go_default_library",
        "//testing/endtoend/params:go_default_library",
        "//testing/endtoend/types:go_default_library",
        "//testing/require:go_default_library",
        "//testing/slasher/simulator:go_default_library",
        "//testing/util:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@com_github_prysmaticlabs_eth2_types//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_sirupsen_logrus//hooks/test:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_protobuf//types/known/emptypb:go_default_library",
        "@org_golang_x_sync//errgroup:go_default_library",
    ],
)

go_test(
    name = "go_mainnet_test",
    size = "large",
    testonly = True,
    srcs = [
        "endtoend_test.go",
        "mainnet_e2e_test.go",
    ],
    args = ["-test.v"],
    data = [
        "//:prysm_sh",
        "//cmd/beacon-chain",
        "//cmd/validator",
        "//tools/bootnode",
        "@com_github_ethereum_go_ethereum//cmd/geth",
        "@web3signer",
    ],
    eth_network = "mainnet",
    shard_count = 2,
    tags = [
        "mainnet",
        "manual",
        "multiclient",
        "requires-network",
    ],
    deps = [
        "//beacon-chain/blockchain/testing:go_default_library",
        "//beacon-chain/core/transition:go_default_library",
        "//beacon-chain/db/testing:go_default_library",
        "//beacon-chain/operations/slashings:go_default_library",
        "//beacon-chain/state/stategen:go_default_library",
        "//config/params:go_default_library",
        "//crypto/bls:go_default_library",
        "//proto/prysm/v1alpha1:go_default_library",
        "//testing/assert:go_default_library",
        "//testing/endtoend/components:go_default_library",
        "//testing/endtoend/components/eth1:go_default_library",
        "//testing/endtoend/evaluators:go_default_library",
        "//testing/endtoend/helpers:go_default_library",
        "//testing/endtoend/params:go_default_library",
        "//testing/endtoend/types:go_default_library",
        "//testing/require:go_default_library",
        "//testing/slasher/simulator:go_default_library",
        "//testing/util:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@com_github_prysmaticlabs_eth2_types//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_sirupsen_logrus//hooks/test:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_protobuf//types/known/emptypb:go_default_library",
        "@org_golang_x_sync//errgroup:go_default_library",
    ],
)
